@{
    ViewBag.Title = "Samples";
}
<div class="row">
    <div class="col-md-12">
        <h2>@ViewBag.Title</h2>

        <ul class="nav nav-tabs" role="tablist">
            <li class="active"><a href="#tab-filterbox" data-toggle="tab">Box Filter</a></li>
            <li><a href="#tab-filterrange" data-toggle="tab">Range Filter</a></li>
            <li><a href="#tab-filterlist" data-toggle="tab">List Filter</a></li>
            <li><a href="#tab-testgrid" data-toggle="tab">Test Grid</a></li>
        </ul>

        <div class="tab-content">
            <div id="tab-filterbox" class="tab-pane active" role="tabpanel">
                <p>This example displays Griddly's filtering by text box or select list.</p>
                @Html.Griddly("FilterBoxGrid", new { test = SortDirection.Ascending })
            </div>

            <div id="tab-filterrange" class="tab-pane" role="tabpanel">
                <p>This example shows a number of features used for testing.</p>
                <a href="javascript:GetFilterValues()">get filter values</a> | <a href="javascript:SetFilterValues()">set filter values</a>
                @Html.Griddly("FilterRangeGrid")
            </div>

            <div id="tab-filterlist" class="tab-pane" role="tabpanel">
                <p>This example shows a number of features used for testing.</p>
                @Html.Griddly("FilterListGrid")
            </div>

            <div id="tab-testgrid" class="tab-pane" role="tabpanel">
                <p>This example shows a number of features used for testing.</p>
                @Html.Griddly("TestGrid")
            </div>
        </div>


        @*<h3>Scrollable Example</h3>

        <h3>Other Random Examples/Tests</h3>*@

@* TODO:
Columns
Buttons
Filters
Selection
Grid settings
Exports
LINQ results
Dapper results
Templating
Server hooks
Client events
Client methods
*@
    </div>
</div>

<script>
    function AlertSelectedIds(rowIds)
    {
        var result = $(this).closest(".griddly").griddly("getSelected", rowIds);

        var str = "{\n";
        for (var k in result)
            str += " " + k + " : [ " + result[k].toString() + " ]\n";
        str += "}";

        alert(str);
    }

    function GetFilterValues()
    {
        var result = $(".filter-range-grid").griddly("getFilterValues");

        var str = "{\n";
        for (var k in result)
            str += " " + k + " : [ " + result[k].toString() + " ]\n";
        str += "}";

        alert(str);
    }

    function SetFilterValues()
    {
        $(".filter-range-grid").griddly("setFilterValues", { company: [0, 1, 2, 3, 4, 5] });
    }

    function Scrolly()
    {
        var grid = $(".griddly.filter-list-grid");
        var table = grid.find("table");


        // some basic changes to make the grid more conducive to scrolling
        grid.find(".griddly-scrollable-container").css({ "overflow": "auto", "height": "250px" });
        grid.find("thead td").css({ "background-color": "white" });
        grid.css({ "overflow": "hidden" });

        grid.on("refresh.griddly", function ()
        {
            table.floatThead({
                scrollContainer: function ($table)
                {
                    return $table.closest(".griddly-scrollable-container");
                }
            });
        });

        grid.griddly("pageSize", 20);
        grid.griddly("refresh");

        return false;
    }
</script>

@section scripts{
    <script>
        //$(".test-grid").on("beforerefresh.griddly", function ()
        //{
        //    alert("It's not minty fresh!");
        //    return false;
        //});
    </script>
}